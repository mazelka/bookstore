%main.container
  %h1.general-title-margint= t('.settings')
  - if current_customer && current_customer.errors.any?
    - current_customer.errors.full_messages.each do |message|
      %li= message
  %ul
  - flash.each do |_type, message|
    -if message.is_a?(Array)
      -message.each do |m|
        %li.mb-20= m
    -else
      %li.mb-20= message
  %ul.nav.clearfix.mb-20{role: "tablist"}
    %li.tab-item.active{role: "presentation"}
      %a.tab-link{href: "#address", 'aria-controls': "address", role: "tab", 'data-toggle': "tab"}= t('.address')
    %li.tab-item{role: "presentation"}
      %a.tab-link{href: "#privacy", 'aria-controls': "privacy", role: "tab", 'data-toggle': "tab"}= t('.privacy')
  .tab-content
    #address.tab-pane.fade.in.active.general-main-wrap{role: "tabpanel"}
      %form
        .hidden-xs.hidden-sm
          .row
            .col-md-5
              %h3.general-subtitle.mt-0= t('address.shipping_address')
            .col-md-5.col-md-offset-1
              %h3.general-subtitle.mt-0= t('address.billing_address')
              %p.form-group.checkbox
                %label.checkbox-label
                  %input.checkbox-input.test-class{type: "checkbox", hidden: "true", name: 'billing'}
                  %span.checkbox-icon
                    %i.fa.fa-check
      = render partial: 'shared/address', locals: {resource: current_customer, url: settings_update_path}
    #privacy.tab-pane.fade{role: "tabpanel"}
      .row.mb-60
        .col-sm-5
          %p.in-gold-500.font-18.mb-25= t('.email')
          .general-form-md
            = form_for current_customer, url: settings_path, method: :put do |f|
              .form-group.mb-35
                = f.label t('.email'), class: 'control-label input-label'
                = f.text_field :email, class: 'form-control'
              .general-text-align
                = f.submit t('.update_email'), class: 'btn btn-default mb-20'
        .col-sm-5.col-sm-offset-1
          %p.in-gold-500.font-18.mb-25= t('.password')
          = form_for current_customer, url: settings_path, method: :put do |f|
            .general-form-md.divider-lg-bottom.pb-25
              .form-group.mb-30
                = f.label t('.old_password'), class: 'control-label input-label'
                = f.password_field :password, class: 'form-control'
              .form-group.mb-30
                = f.label t('.new_password'), class: 'control-label input-label'
                = f.password_field :password, class: 'form-control'
              .form-group.mb-40
                = f.label t('.confirm_password'), class: 'control-label input-label'
                = f.password_field :password, class: 'form-control'
              .general-text-align
                = f.submit t('.update_password'), class: 'btn btn-default mb-20'
        .col-sm-12
          %p.in-gold-500.font-18.mb-25= t('.remove_account')
          = form_for current_customer, url: customer_registration_path(current_customer.id), method: :delete do |f|
            .general-settings-btn
              = f.submit t('.remove_account'), class: 'btn btn-default mb-20 remove-customer disabled'
            .form-group.checkbox.general-settings-checkbox
              %label.checkbox-label
                %input.checkbox-input.agree-remove{type: "checkbox", hidden: "true"}
                %span.checkbox-icon
                  %i.fa.fa-check
                %span.checkbox-text= t('.accept_checkbox')


-# Billing address handling
:javascript
  function hideBillingAddress() {
    let billingSection = document.querySelector('.billing-section');
    let billingCheckbox = document.querySelector("input[name=billing]")

    billingCheckbox.addEventListener('click', (e) => {

      billingSection.classList.contains('hidden') ? billingSection.classList.remove('hidden') : billingSection.classList.add('hidden')
    })
  }

  hideBillingAddress();

  function handleBillingAddress(e) {
    let billingCheckbox = document.querySelector("input[name=billing]")

    if (billingCheckbox.checked) {
      document.getElementById('billing_address_attributes_address_line').value = document.getElementById('shipping_address_attributes_address_line').value
      document.getElementById('billing_address_attributes_country').value = document.getElementById('shipping_address_attributes_country').value
      document.getElementById('billing_address_attributes_city').value = document.getElementById('shipping_address_attributes_city').value
      document.getElementById('billing_address_attributes_zip').value = document.getElementById('shipping_address_attributes_zip').value
      document.getElementById('billing_address_attributes_phone').value = document.getElementById('shipping_address_attributes_phone').value
    }
  }

-# Billing address handling
:javascript
  function confirmRemovingCustomer() {
    let removeCustomerCheckbox = document.querySelector('.agree-remove');
    let removeCustomerButton = document.querySelector(".remove-customer")

    removeCustomerCheckbox.addEventListener('click', (e) => {

      removeCustomerButton.classList.contains('disabled') ? removeCustomerButton.classList.remove('disabled') : removeCustomerButton.classList.add('disabled')
    })
  }

  confirmRemovingCustomer();
